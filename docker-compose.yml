version: '3.0'

services:
    front-a:
        container_name: front-cluster-a
        build:
            context: .
            dockerfile: infrastructures/front/Dockerfile
            args:
               - REACT_APP_URI_HOST=http://localhost:9200
               - REACT_APP_OTHER_CLUSTER_URL=http://localhost:9300
               - REACT_APP_HDFS_HOST=http://localhost:9500
               - REACT_APP_NAME_OF_CLUSTER=Cluster A
               - REACT_APP_NAME_OF_CLUSTER_URL=cluster_a
               - REACT_APP_OTHER_CLUSTER=cluster_b
        ports:
            - "3000:3000"
        environment:
            - PORT=3000
            - NAME=front
            - CHOKIDAR_USEPOLLING=true
        restart: always
        env_file:
            - .env
        volumes:
            - ./src/services/front/:/src/react-front/
        networks:
            - cluster-a-network
        stdin_open: true
        tty: true

    hdfs:
        container_name: "hdfs"
        build:
            context: .
            dockerfile: infrastructures/hdfs/Dockerfile
        ports:
            - "9500:9500"
        environment:
            - PORT=9500
            - NAME=HDFS
            - DEBUG=1
        restart: always
        env_file:
            - .env
        volumes:
            - ./src/services/hdfs/:/src/app/
            - shared-workspace:/opt/workspace
        networks:
            - spark-net

    cluster-a:
        container_name: back-cluster-a
        build:
            context: .
            args:
                NAME: ${CLUSTER_A}
            dockerfile: infrastructures/app/Dockerfile
        ports:
            - "9200:9200"
        environment:
            - PORT=9200
            - DEBUG=1
            - NAME=${CLUSTER_A}
        restart: always
        env_file:
            - .env
        volumes:
            - ./src/services/app/:/src/app/
            -  shared-workspace:/opt/workspace
        networks:
            - spark-net
            - cluster-a-network
        depends_on:
            - master

    front-b:
        build:
            context: .
            dockerfile: infrastructures/front/Dockerfile
            args:
                - REACT_APP_URI_HOST=http://localhost:9300
                - REACT_APP_OTHER_CLUSTER_URL=http://localhost:9200
                - REACT_APP_HDFS_HOST=http://localhost:9500
                - REACT_APP_NAME_OF_CLUSTER=Cluster B
                - REACT_APP_NAME_OF_CLUSTER_URL=cluster_b
                - REACT_APP_OTHER_CLUSTER=cluster_a
        ports:
            - "3001:3000"
        environment:
            - PORT=3000
            - NAME=front
            - CHOKIDAR_USEPOLLING=true
        restart: always
        volumes:
            - ./src/services/front/:/src/app/
        networks:
            - cluster-b-network
        stdin_open: true
        tty: true

    cluster-b:
        container_name: back-cluster-b
        build:
            context: .
            args:
                NAME: cluster_b
            dockerfile: infrastructures/app/Dockerfile
        ports:
            - "9300:9300"
        environment:
            - PORT=9300
            - DEBUG=1
            - NAME=cluster_b
        restart: always
        volumes:
            - ./src/services/app/:/src/app/
            -  shared-workspace:/opt/workspace
        networks:
            - spark-net
            - cluster-b-network
        depends_on:
            - master

    front-c:
        build:
            context: .
            dockerfile: infrastructures/front-c/Dockerfile
            args:
                - REACT_APP_URI_HOST=http://localhost:9000
                - REACT_APP_HDFS_HOST=http://localhost:9500
                - REACT_APP_NAME_OF_CLUSTER=Cluster C
        ports:
            - "3002:3000"
        environment:
            - PORT=3000
            - NAME=front
            - CHOKIDAR_USEPOLLING=true
        restart: always
        volumes:
            - ./src/services/front-c/:/src/app/
        networks:
            - cluster-c-network
        stdin_open: true
        tty: true

    backend:
        container_name: backend
        build:
            context: .
            dockerfile: infrastructures/backend/Dockerfile
        ports:
            - "9000:9000"
        environment:
            - PORT=9000
            - DEBUG=1
            - NAME=backend
        restart: always
        volumes:
            - ./src/services/backend/:/src/app/
            - shared-workspace:/opt/workspace
        networks:
            - spark-net
        depends_on:
            - master

    master:
        build:
            context: infrastructures/spark
            dockerfile: Dockerfile
        container_name: master
        command: bash -c "start-master.sh && tail -F /dev/null"
        ports:
            - "7077:7077"
            - "8090:8080"
        volumes:
            -  shared-workspace:/opt/workspace
        networks:
            - spark-net


    worker:
        build:
            context: infrastructures/spark
            dockerfile: Dockerfile
        environment:
            - SPARK_WORKER_CORES=1
            - SPARK_WORKER_MEMORY=3g
        command: bash -c "start-worker.sh spark://master:7077 && tail -F /dev/null"
        deploy:
            replicas: 2
        volumes:
            -  shared-workspace:/opt/workspace
        networks:
            - spark-net
        depends_on:
            - master


volumes:    
    cluster-A-volume:
    cluster-B-volume:
    shared-workspace:
        driver: local

networks:
    spark-net:
    front-back-net:
    cluster-a-network:
    cluster-b-network:
    cluster-c-network:



